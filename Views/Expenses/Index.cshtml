@model PersonalExpenses.ViewModels.ExpenseListViewModel


@{
    ViewData["Title"] = "Mis Gastos";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="text-center">
    <div class="alert md expense-alert alert-success alert-dismissible fade show" role="alert">
        <i class="fa-solid fa-circle-check me-2"></i>
        @TempData["SuccessMessage"]
    </div>
    </div>
}
<h1 class="mb-4">ðŸ’¸ Gastos</h1>

    <div class="alert alert-info d-flex justify-content-between align-items-center">
        <div>
            <strong>ðŸ’° Gasto total del mes actual:</strong>
        </div>
        <div class="fs-4 fw-bold text-success">
            @Model.TotalThisMonth.ToString("C2", System.Globalization.CultureInfo.GetCultureInfo("es-AR"))
        </div>
    </div>
<!-- Filtros -->
<div class="card mb-4 shadow-sm">
    <div class="card-body">
        <form asp-action="Index" method="get" class="row g-3">
            <div class="col-md-3">
                <label asp-for="@Model.Filter!.FromDate" class="form-label">Desde</label>
                <input type="date" class="form-control" asp-for="Filter.FromDate" />
            </div>
            <div class="col-md-3">
                <label asp-for="@Model.Filter!.ToDate" class="form-label">Hasta</label>
                <input type="date" class="form-control" asp-for="Filter.ToDate" />
            </div>
            <div class="col-md-3">
                <label class="form-label">CategorÃ­a</label>
                <select asp-for="@Model.Filter!.CategoryId" asp-items="Model.Filter?.Categories" class="form-select">
                    class="form-select">
                    <option value="">Todas</option>
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end gap-2">
                <button type="submit" class="btn btn-primary w-50">Filtrar</button>
                <a asp-action="Index" class="btn btn-outline-secondary w-50">Limpiar</a>
            </div>
        </form>
    </div>
</div>

<!-- Si no hay gastos -->
@if (!Model.Expenses.Any() && Model.Filter?.FromDate == null && Model.Filter?.ToDate == null && Model.Filter?.CategoryId
== null)
{
    <div class="alert alert-info text-center">
        <p>ðŸ“­ AÃºn no registraste ningÃºn gasto.</p>
        <a href="@Url.Action("Create", "Expenses")" class="btn btn-primary mt-2">Agregar mi primer gasto</a>
    </div>
}
else
{
    
    <!-- Tabla de gastos -->
    <div class="card shadow-sm">
        <div class="card-header d-flex justify-content-between align-items-center">
            <span class="fw-bold">ðŸ“Š Listado de gastos</span>
            <a asp-action="Create" class="btn btn-sm btn-success">âž• Nuevo Gasto</a>
        </div>
        <div class="table-responsive">
            <table class="table table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th>Fecha</th>
                        <th>Monto (ARS)</th>
                        <th>CategorÃ­a</th>
                        <th class="text-end">Acciones</th>
                    </tr>
                </thead>
                <tbody>
    @foreach (var item in Model.Expenses)
    {
                        <tr>
                            <td>@item.Date.ToShortDateString()</td>
                            <td>@item.Amount.ToString("C2", new System.Globalization.CultureInfo("es-AR"))</td>
                            <td>@item.Category?.Name</td>
                            <td class="text-end">
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary"
                                    title="Detalles">
                                    <i class="fa-solid fa-eye"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning"
                                    title="Editar">
                                    <i class="fa-solid fa-pen-to-square"></i>
                                </a>
                                <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal"
                                    data-bs-target="#deleteModal" data-expense-id="@item.Id" title="Eliminar">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </td>
                        </tr>
    }
</tbody>
<tfoot class="table-primary fw-bold">
        <tr>
            <td>Total</td>
            <td>@Model.Expenses.Sum(e => e.Amount).ToString("C2", System.Globalization.CultureInfo.GetCultureInfo("es-AR"))</td>
            <td></td>
            <td></td>
        </tr>
    </tfoot>

</table>
</div>
</div>
}

<!-- Modal de eliminaciÃ³n -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="Delete" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirmar eliminaciÃ³n</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    Â¿EstÃ¡s seguro de que querÃ©s eliminar este gasto?
                    <input type="hidden" name="id" id="expenseId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const deleteModal = document.getElementById("deleteModal");
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const expenseId = button.getAttribute('data-expense-id');
            const input = document.getElementById('expenseId');
            input.value = expenseId;
        });
    </script>
    <script>
        window.onload = () => {
            setTimeout(() => {
                const alertNode = document.querySelector('.expense-alert');
                if (alertNode) {
                    // Usa el mÃ©todo de Bootstrap para cerrar alertas si querÃ©s animaciÃ³n nativa:
                    bootstrap.Alert.getOrCreateInstance(alertNode).close();
                }
            }, 2000);
        };
    </script>
}
